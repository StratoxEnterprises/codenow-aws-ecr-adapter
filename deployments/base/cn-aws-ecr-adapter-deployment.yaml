apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: cn-aws-ecr-adapter
    app.kubernetes.io/part-of: codenow
    app.kubernetes.io/component: adapter
  name: cn-aws-ecr-adapter
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cn-aws-ecr-adapter
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cn-aws-ecr-adapter
    spec:
      containers:
        - name: cn-aws-ecr-adapter
          image: "codenow-stxcn-docker.jfrog.io/codenow/aws-ecr-adapter:1.0.0"
          imagePullPolicy: Always
          env:
            - name: INVENTORY_PROVISIONER_SERVICE_HOST
              valueFrom:
                configMapKeyRef:
                  name: cn-aws-ecr-adapter-cm
                  key:  inventory.provisioner.service.host
            - name: ACCOUNT_CONFIG_SERVICE_HOST
              valueFrom:
                configMapKeyRef:
                  name: cn-aws-ecr-adapter-cm
                  key: account.config.service.host
            - name: TRF_STATE_AWS_S3_URL
              valueFrom:
                configMapKeyRef:
                  name: cn-aws-ecr-adapter-cm
                  key: aws.s3.url
            - name: AWS_S3_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: cn-aws-ecr-adapter-secret
                  key: aws_s3_access_key_id
            - name: AWS_S3_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: cn-aws-ecr-adapter-secret
                  key: aws_s3_secret_access_key
            - name: NATS_URL
              valueFrom:
                configMapKeyRef:
                  name: cn-aws-ecr-adapter-cm
                  key: nats.server.host
                  optional: false
            - name: NATS_COMPONENT_REGISTERED_IN
              valueFrom:
                configMapKeyRef:
                  name: cn-aws-ecr-adapter-cm
                  key: nats.subject.component.registered.in
                  optional: false
            - name: NATS_ECR_CREATED_OUT
              valueFrom:
                configMapKeyRef:
                  name: cn-aws-ecr-adapter-cm
                  key: nats.subject.ecr.created.out
                  optional: false
            - name: NATS_TLS_SKIP_CERT_VERIFY
              valueFrom:
                configMapKeyRef:
                  name: cn-aws-ecr-adapter-cm
                  key: nats.tls.skip.cert.verify
                  optional: false
            - name: NATS_TLS_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: cn-aws-ecr-adapter-cm
                  key: nats.tls.enabled
                  optional: false
            - name: LOGGER_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: cn-aws-ecr-adapter-cm
                  key: logger.level
                  optional: false
            - name: TRACER_URL
              valueFrom:
                configMapKeyRef:
                  name: cn-aws-ecr-adapter-cm
                  key: tracer.url
                  optional: false
            - name: NATS_AUTH_NKEY_FILE
              value: "/secrets/nats_nkey"
          volumeMounts:
            - mountPath: "/secrets"
              name: nats-nkey
              readOnly: true
          resources:
            requests:
              cpu: 200m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: cn-aws-ecr-adapter
                topologyKey: kubernetes.io/hostname
      volumes:
        - name: nats-nkey
          secret:
            secretName: nats-nkey